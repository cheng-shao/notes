
shell的作用：
-------------------------
-
-外围的应用程序
-
-------------------------
-
-shell解释器（翻译官、命令解释器）
-  
-------------------------
-
-操作系统
-  
-------------------------
-
-机器硬件
-

常用命令：
  echo $SHELL 默认解析器
  cat /etc/shells 所有shell的种类

参数：
  $0: 命令本身
  $n: 第几个参数（n > 0）
  $*: 所有参数
  $#: 参数数量

保存并退出：
  :wq + 回车


vi是一个功能强大的全屏幕文本编辑工具，一直以来都作为类UNIX操作系统的默认文本编辑器。
vim是vi编辑器的增强版本，在vi编辑器的基础上扩展了很多实用的功能，但是习惯上也将vim称为vi。
vi/vim 文本编辑器
vi/vim + 文件 可进入文本编辑模式

cat：查看文件（concatenate）命令用于连接文件并打印到标准输出设备上
cat 文件名

echo字符串输出

cd
 cd d: 切换到d盘
 cd .. 切换到上级目录
 cd xx 切换到某个目录里

shell脚本就是由Shell命令组成的执行文件

#! 告诉系统这个脚本需要什么解释器来执行。
文件扩展名 .sh 不是强制要求的。



clear    // 清理命令窗口（可简写为cls）
exit    // 关闭命令窗口
mkdir 文件夹名    // 新建文件夹
cd 文件夹名    // 进入文件夹
cd ..    // 返回上一级文件夹目录
rm 文件名    // 删除文件
rm 空文件夹名    // 删除空文件夹
rm -r 文件夹名    // 删除文件夹，不管其下有多少级目录，一并删除
rm -f 文件名    // 强制删除，没有提示
rm -rf 文件夹名    // 删除当前目录下的所有文件并不提示（不能恢复，慎用）

pwd // 输出当前文件的路径
cp // 拷贝文件

ping + 域名或ip

// 获取脚本所在目录
// $0表示当前脚本
// 都是用来作命令替换的
 `dirname $0` 其中反引号··等同于$(dirname $0)。

 // 文件包含
 . filename.sh   # 注意点号(.)和文件名中间有一空格
或
source filename.sh

// 变量
${ }变量替换
echo $your_name
echo ${your_name}
变量名外面的花括号是可选的，加不加都行,加花括号是为了帮助解释器识别变量的边界

set指令的用法
// 常用参数
set -x 会在执行每一行 shell 脚本时，把执行的内容输出来。它可以让你看到当前执行的情况，里面涉及的变量也会被替换成实际的值。
set -e 会在执行出错时结束程序，就像其他语言中的“抛出异常”一样。（准确说，不是所有出错的时候都会结束程序，见下面的注）





